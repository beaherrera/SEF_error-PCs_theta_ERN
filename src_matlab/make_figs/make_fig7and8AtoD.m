%% calculate the EEG generated by a dipole in SEF

clear
clc
    
Fs = 1e3; % lfp sampling rate
ts_saccade = -500:1000; % time span in ms
tspan = ts_saccade;

%% perpendicular sessions number

Sess_EuP1 = 14:19; % Eu, site P1
Sess_XP2P3 = 20:29; % X, 20-25 site P2, 26-29 site P3

SessNumb = [Sess_EuP1, Sess_XP2P3];

%% load CSDs

load("data\monkeys_data\lfp_csd\avg_lfp_csd_sess.mat", 'avg_LFP')
avg_LFP_sess_Go = structfun(@(x) x.avg_LFP_Go, avg_LFP, ...
    'UniformOutput',false);
avg_LFP_sess_Go = struct2cell(avg_LFP_sess_Go);
avg_LFP_sess_Go = cat(3, avg_LFP_sess_Go{:});
grand_avg_LFP_Go_Eu = mean(avg_LFP_sess_Go(:,:,ismember(SessNumb, Sess_EuP1)), ...
    3, 'omitnan');

avg_LFP_sess_NC = structfun(@(x) x.avg_LFP_NC, avg_LFP, ...
    'UniformOutput',false);
avg_LFP_sess_NC = struct2cell(avg_LFP_sess_NC);
avg_LFP_sess_NC = cat(3, avg_LFP_sess_NC{:});
grand_avg_LFP_NC_Eu = mean(avg_LFP_sess_NC(:,:,ismember(SessNumb, Sess_EuP1)), ...
    3, 'omitnan');

load('data\sim_data\simCSD.mat', 'zs_Go_saccade', 'zs_NC_saccade', ...
    'iCSD_Go_saccade', 'iCSD_NC_saccade')

load("data\head_model_NMTv2\surfaces\electrodes.mat")

%% load lead field matrices

selected_electrodes = [6 11 15 31]; 

% average reference
Ne = 4;
Hn = eye(Ne) - (ones(Ne,1)*ones(Ne,1)')/Ne;

load("data\head_model_NMTv2\lead_fields\leadFieldDipBEMVert12454.mat", 'Keoo')
Kedip_left = Hn*Keoo(selected_electrodes,:); clearvars Keoo

load("data\head_model_NMTv2\lead_fields\leadFieldDipBEMVert12535.mat", 'Keoo')
Kedip_right = Hn*Keoo(selected_electrodes,:); clearvars Keoo

load('data\head_model_NMTv2\lead_fields\leadFieldQuadBEMVert12454.mat', 'Keoo')
Kequad_left = Hn*Keoo(selected_electrodes,:); clearvars Keoo

load('data\head_model_NMTv2\lead_fields\leadFieldQuadBEMVert12535.mat', 'Keoo')
Kequad_right = Hn*Keoo(selected_electrodes,:); clearvars Keoo

load('data\head_model_NMTv2\lead_fields\leadFieldMonBEMVert12454Cdip.mat', 'Keoo')
Kemon_left = Hn*Keoo(selected_electrodes,:); clearvars Keoo

load('data\head_model_NMTv2\lead_fields\leadFieldMonBEMVert12535Cdip.mat', 'Keoo')
Kemon_right = Hn*Keoo(selected_electrodes,:); clearvars Keoo

load("data\head_model_NMTv2\SEF_vert_and_orient.mat", 'orientation')

%% comparison with Eu's EEG

load("data\monkeys_data\ERN_Eu_4ch_SessAvg.mat", 'ERN_Go', 'ERN_NC')

ts = -299:(900-300);

% re-referencing to the avg reference
ERN_Go_avg = squeeze(mean(ERN_Go, 1, 'omitnan'))';
ERN_Go_avg = Hn*ERN_Go_avg;

ERN_NC_avg = squeeze(mean(ERN_NC, 1, 'omitnan'))';
ERN_NC_avg = Hn*ERN_NC_avg;

%% Fig 4 - top

ERN = median([184 224]);
Pe = round(median([302 327]));

font = 9;

figure('Units', 'inches','Position',[0 0 6 1.2]);
tiledlayout(1, 3,'TileSpacing','Compact','Padding','Compact');

nexttile(1)
plot(ts, smoothdata(ERN_Go_avg(1,:), ...
    'gaussian',10), '-k', 'LineWidth', 1.25);
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
yline(0)
xline(0)
xlim([-500 500])
ylim([-10 15])
box off
ylabel('EEG (\muV)')
set(gca, 'YDir','reverse', 'XTickLabel',[],'XTick',[],'XColor','None', ...
    'LineWidth', 1.5, ...
    'FontSize', font, 'FontWeight', 'bold')

nexttile(2)
plot(ts, smoothdata(ERN_NC_avg(1,:), ...
    'gaussian',10), ':k', 'LineWidth', 3); 
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
yline(0)
xline(0)
xlim([-500 500])
ylim([-10 15])
yticklabels({})
box off
set(gca, 'YDir','reverse', 'XTickLabel',[],'XTick',[],'XColor','None', ...
    'LineWidth', 1.5, ...
    'FontSize', font, 'FontWeight', 'bold')

nexttile(3)
plot(ts, smoothdata(ERN_NC_avg(1,:), ...
    'gaussian',10) - smoothdata(ERN_Go_avg(1,:), ...
    'gaussian',10), 'Color', [153 0 153]./255, 'LineWidth', 1.5)
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
yline(0)
xline(0)
xlim([-500 500])
box off
set(gca, 'YDir','reverse', 'XTickLabel',[],'XTick',[],'XColor','None', ...
    'LineWidth', 1.5, ...
    'FontSize', font, 'FontWeight', 'bold')

%% Fig 8 - panel A

font = 10;

figure('Units', 'inches','Position',[0.05 0.05 3.5 4]); 
subplot(2,1,1)
p1 = plot(ts, smoothdata(ERN_Go_avg(1,:), ...
    'gaussian',10), '-k', 'LineWidth', 1.25, "DisplayName", "Correct");
hold on;
p2 = plot(ts, smoothdata(ERN_NC_avg(1,:), ...
    'gaussian',10), ':k', 'LineWidth', 3, "DisplayName", "Error"); 
yline(0)
xline(0)
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylabel('\muV')
% xlabel('Time from saccade (ms)')
set(gca, 'YDir','reverse')
xlim([-150 500])
xticklabels({})
legend([p1 p2], {'Correct', 'Error'}, 'Location', 'best','Box','off')
set(gca, 'box', 'off','linewidth',1,'fontsize',font,'fontweight','bold')

subplot(2,1,2)
p1 = plot(ts, smoothdata(ERN_NC_avg(1,:), ...
    'gaussian',10) - smoothdata(ERN_Go_avg(1,:), ...
    'gaussian',10), 'Color', [153 0 153]./255, 'LineWidth', 1.5);

yline(0)
xline(0)
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylabel('\muV')
xlabel('Time from saccade (ms)')
set(gca, 'YDir','reverse')
xlim([-150 500])
legend(p1, {'Error - Correct'}, 'Location', 'best','Box','off')
set(gca, 'box', 'off','linewidth',1,'fontsize',font,'fontweight','bold')

%% calculate Eu CSD

% -- Parameters CSD calculation
Ne = 16; % number of electrodes in the shank
a = 1e-6; % [mm] position of the first electrode
elec_spacing = 0.15; % [mm] electrode spacing
ze = a:elec_spacing:((Ne-1)*elec_spacing + a); % position of the electrodes
% along z
el_pos = ze*1e-3;  % [m] electrode positions with respect to the pia surface
cond = 0.33; %[S/m] gray matter conductance 0.4
cond_top = 0; % conductance outside the gray matter (above pia matter)
this_tol = 1e-6;  % tolerance
gauss_sigma = 0.1e-3;   %[m] Gaussian filter std
diam = 3*1e-3; % [m] cylinder diameter
filter_range = 5*gauss_sigma; % numeric filter must be finite in extent

% -- calculate cubic splines
Fcs = F_cubic_spline(el_pos,diam,cond,cond_top);

% -- get CSD
[zs_Go,CSD_cs_Go] = make_cubic_splines(el_pos, ...
    grand_avg_LFP_Go_Eu, Fcs);
if ~isempty(gauss_sigma) && gauss_sigma~=0 %filter iCSD
    [zs_Go,CSD_cs_Go] = gaussian_filtering(zs_Go, ...
        CSD_cs_Go, gauss_sigma, filter_range);
end
grand_avg_iCSD_Go = CSD_cs_Go; % [nA/mm3] current source density
zs_Go = zs_Go*1e3; % [mm]

[zs_NC,CSD_cs_NC] = make_cubic_splines(el_pos, ...
    grand_avg_LFP_NC_Eu, Fcs);
if ~isempty(gauss_sigma) && gauss_sigma~=0 %filter iCSD
    [zs_NC,CSD_cs_NC] = gaussian_filtering(zs_NC, ...
        CSD_cs_NC, gauss_sigma, filter_range);
end
grand_avg_iCSD_NC = CSD_cs_NC; % [nA/mm3] current source density
zs_NC = zs_NC*1e3; % [mm]

%% get dipoles
rc = diam.*1e3/2; % cortical column diameter in mm

d_simCSD_Go = cal_dip_CSD(zs_NC', iCSD_Go_saccade, rc); % nA*m
d_simCSD_NC = cal_dip_CSD(zs_NC', iCSD_NC_saccade, rc); % nA*m

d_expCSD_Go = cal_dip_CSD(zs_NC', grand_avg_iCSD_Go, rc); % nA*m
d_expCSD_NC = cal_dip_CSD(zs_NC', grand_avg_iCSD_NC, rc); % nA*m

%% get monopole

mon_expCSD_Go = sum(mean(abs(diff(zs_Go)))*grand_avg_iCSD_Go*(pi*(rc^2)), 1); % nA
mon_expCSD_NC = sum(mean(abs(diff(zs_Go)))*grand_avg_iCSD_NC*(pi*(rc^2)), 1); % nA

mon_simCSD_Go = sum(mean(abs(diff(zs_Go)))*iCSD_Go_saccade*(pi*(rc^2)), 1); % nA
mon_simCSD_NC = sum(mean(abs(diff(zs_Go)))*iCSD_NC_saccade*(pi*(rc^2)), 1); % nA

%% get quadrupoles

quad_simCSD_Go = cal_quad_CSD(zs_NC', iCSD_Go_saccade, rc).*1e-6; % nA*m2
quad_simCSD_NC = cal_quad_CSD(zs_NC', iCSD_NC_saccade, rc).*1e-6; % nA*m2

quad_expCSD_Go = cal_quad_CSD(zs_NC', grand_avg_iCSD_Go, rc).*1e-6; % nA*m2
quad_expCSD_NC = cal_quad_CSD(zs_NC', grand_avg_iCSD_NC, rc).*1e-6; % nA*m2

%% Fig 7 - panel A
font = 11;

figure('Units', 'inches','Position',[0 0 4 5.5]);
tiledlayout(3, 1,'TileSpacing','Compact','Padding','Compact');

nexttile
p1 = plot(tspan, mon_expCSD_Go.*1e-3 - ...
    mean(mon_expCSD_Go(tspan>=-150 & tspan<=-100).*1e-3), ...
    '-k','LineWidth',1.25, "DisplayName",'Correct');
hold on;
p2 = plot(tspan, mon_expCSD_NC.*1e-3 - ...
    mean(mon_expCSD_NC(tspan>=-150 & tspan<=-100).*1e-3), ...
    ':k','LineWidth',3, "DisplayName",'Error');
hold on;
p3 = plot(tspan, mon_expCSD_NC.*1e-3 - mon_expCSD_Go.*1e-3, '-', ...
    'Color', [153 0 153]./255, 'LineWidth', 1.5, ...
    "DisplayName",'Error - Correct');
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylabel({'m_z(t) (\muA)'})
legend([p1 p2 p3], 'Location','best','Box','off')
box off
xlim([-150 500])
xticks(-100:100:500)
xticklabels({})
set(gca, 'box', 'off','linewidth',1,'fontsize',font,'fontweight','bold')

nexttile
plot(tspan, d_expCSD_Go - mean(d_expCSD_Go(tspan>=-150 & tspan<=-100)), ...
    '-k','LineWidth',1.25, "DisplayName",'Correct')
hold on
plot(tspan, d_expCSD_NC - mean(d_expCSD_NC(tspan>=-150 & tspan<=-100)), ...
    ':k','LineWidth',3, "DisplayName",'Error')
hold on;
plot(tspan, d_expCSD_NC - d_expCSD_Go, '-', 'Color', [153 0 153]./255, 'LineWidth', 1.5, ...
    "DisplayName",'Error - Correct')
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylabel({'d_z(t) (nA*m)'})
xlim([-150 500])
xticks(-100:100:500)
xticklabels({})
set(gca, 'box', 'off','linewidth',1,'fontsize',font,'fontweight','bold')

nexttile %(3,1,3)
plot(tspan, quad_expCSD_Go - mean(quad_expCSD_Go(tspan>=-150 & tspan<=-100)), ...
    '-k','LineWidth',1.25, "DisplayName",'Correct')
hold on
plot(tspan, quad_expCSD_NC - mean(quad_expCSD_NC(tspan>=-150 & tspan<=-100)), ...
    ':k','LineWidth',3, "DisplayName",'Error')
hold on;
plot(tspan, quad_expCSD_NC - quad_expCSD_Go, '-', 'Color', [153 0 153]./255, 'LineWidth', 1.5, ...
    "DisplayName",'Error - Correct')
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylabel({'q_{zz}(t) (nA*m^2)'})
xlabel('Time from saccade (ms)')
xlim([-150 500])
xticks(-100:100:500)
set(gca, 'box', 'off','linewidth',1,'fontsize',font,'fontweight','bold')

%% Fig 7 - panel B sim

figure('Units', 'inches','Position',[0 0 4 5.5]);
tiledlayout(3, 1,'TileSpacing','Compact','Padding','Compact');

nexttile
p1 = plot(tspan, mon_simCSD_Go.*1e-3 - mean(mon_simCSD_Go(tspan>=-150 & tspan<=-100).*1e-3), ...
    '-r','LineWidth',1.25, "DisplayName",'Correct');
hold on;
p2 = plot(tspan, mon_simCSD_NC.*1e-3 - mean(mon_simCSD_NC(tspan>=-150 & tspan<=-100).*1e-3), ...
    ':r','LineWidth',3, "DisplayName",'Error');
hold on;
p3 = plot(tspan, mon_simCSD_NC.*1e-3 - mon_simCSD_Go.*1e-3, '-', ...
    'Color', [153 0 153]./255, 'LineWidth', 1.5, ...
    "DisplayName",'Error - Correct');
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylabel({'m_z(t) (\muA)'})
legend([p1 p2 p3], 'Location','best','Box','off')
box off
xlim([-150 500])
ylim([-.2 .4])
xticks(-100:100:500)
xticklabels({})
set(gca, 'box', 'off','linewidth',1,'fontsize',font,'fontweight','bold')

nexttile
plot(tspan, d_simCSD_Go - mean(d_simCSD_Go(tspan>=-150 & tspan<=-100)), ...
    '-r','LineWidth',1.25, "DisplayName",'Correct')
hold on
plot(tspan, d_simCSD_NC - mean(d_simCSD_NC(tspan>=-150 & tspan<=-100)), ...
    ':r','LineWidth',3, "DisplayName",'Error')
hold on
plot(tspan, d_simCSD_NC - d_simCSD_Go, ...
    '-', 'Color', [153 0 153]./255, 'LineWidth', 1.5, ...
    "DisplayName",'Error - Correct')
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylabel({'29 X d_z(t) (nA*m)'})
xlim([-150 500])
xticks(-100:100:500)
xticklabels({})
set(gca, 'box', 'off','linewidth',1,'fontsize',font,'fontweight','bold')

nexttile
p1 = plot(tspan, quad_simCSD_Go - mean(quad_simCSD_Go(tspan>=-150 & tspan<=-100)), ...
    '-r','LineWidth',1.25, "DisplayName",'Correct');
hold on
p2 = plot(tspan, quad_simCSD_NC - mean(quad_simCSD_NC(tspan>=-150 & tspan<=-100)), ...
    ':r','LineWidth',3, "DisplayName",'Error');
hold on
p3 = plot(tspan, quad_simCSD_NC - quad_simCSD_Go, ...
    '-', 'Color', [153 0 153]./255, 'LineWidth', 1.5, ...
    "DisplayName",'Error - Correct');
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylabel({'29 X  q_{zz}(t) (nA*m^2)'})
xlabel('Time from saccade (ms)')
xlim([-150 500])
% legend([p1 p2 p3], 'Location','best','Box','off')
xticks(-100:100:500)
set(gca, 'box', 'off','linewidth',1,'fontsize',font,'fontweight','bold')

%% Fig 7 - panel C sim

width = 1.5;

figure('Units', 'inches','Position',[0 0 9 3]);
t = tiledlayout(1, 2,'TileSpacing','Compact','Padding','Compact');

nexttile
colororder({'k','r'})
yyaxis right
plot(tspan, d_simCSD_NC - d_simCSD_Go, '-','LineWidth',1, 'DisplayName','Sim CSD')
ylabel('29 X d_z(t)')
yyaxis left
plot(tspan, d_expCSD_NC - d_expCSD_Go, '-','LineWidth',1, 'DisplayName','Exp CSD')
yline(0)
xline(0)
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylim([-0.1 0.05])
ylabel({'d_z(t) (nA*m)'})
xlim([-150 500])
xticks(-100:100:500)
% xlabel('Time from saccade (ms)')
% xticklabels({})
set(gca, 'box', 'off','linewidth',width,'fontsize',font,'fontweight','bold')

nexttile
colororder({'k','r'})
yyaxis right
p1 = plot(tspan, quad_simCSD_NC - quad_simCSD_Go, '-','LineWidth',1, ...
    'DisplayName','Sim CSD');
ylabel('29 X q_{zz}(t)')
yyaxis left
p2 = plot(tspan, quad_expCSD_NC - quad_expCSD_Go, '-','LineWidth',1, ...
    'DisplayName','Exp CSD');
yline(0)
xline(0)
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylabel({'q_{zz}(t) (nA*m^2)'})
xlim([-150 500])
legend([p1 p2], 'Location','best','Box','off')
xticks(-100:100:500)
set(gca, 'box', 'off','linewidth',width,'fontsize',font,'fontweight','bold')

xlabel(t, 'Time from saccade (ms)','fontsize',14,'fontweight','bold')

%% calculate EEG 
%% dipolar component

EEG_dip_exp_Go = (Kedip_right*(orientation(2,:)') + ...
    Kedip_left*(orientation(1,:)'))*(d_expCSD_Go.*1e-3); % uV
EEG_dip_sim_Go = (Kedip_right*(orientation(2,:)') + ...
    Kedip_left*(orientation(1,:)'))*(d_simCSD_Go.*1e-3); % uV

EEG_dip_exp_NC = (Kedip_right*(orientation(2,:)') + ...
    Kedip_left*(orientation(1,:)'))*(d_expCSD_NC.*1e-3); % uV
EEG_dip_sim_NC = (Kedip_right*(orientation(2,:)') + ...
    Kedip_left*(orientation(1,:)'))*(d_simCSD_NC.*1e-3); % uV

%% quadripolar component

Q = blkdiag(zeros(3,1), zeros(3,1), [0; 0; 1]);

Kequad = (Kequad_right*Q + Kequad_left*Q);
Kequad = Kequad(:,end);

EEG_quad_exp_Go = Kequad*(quad_expCSD_Go.*1e-3); % uV
EEG_quad_sim_Go = Kequad*(quad_simCSD_Go.*1e-3); % uV

EEG_quad_exp_NC = Kequad*(quad_expCSD_NC.*1e-3); % uV
EEG_quad_sim_NC = Kequad*(quad_simCSD_NC.*1e-3); % uV

%% monopolar component

EEG_mon_exp_Go = (Kemon_left + Kemon_right)*(mon_expCSD_Go.*1e-3); % uV

EEG_mon_exp_NC = (Kemon_left + Kemon_right)*(mon_expCSD_NC.*1e-3); % uV

%% sum over mon, dip and quad components 

EEG_exp_Go = EEG_mon_exp_Go + EEG_quad_exp_Go + EEG_dip_exp_Go;
EEG_exp_NC = EEG_mon_exp_NC + EEG_quad_exp_NC + EEG_dip_exp_NC;

EEG_sim_Go = EEG_quad_sim_Go + EEG_dip_sim_Go;
EEG_sim_NC = EEG_quad_sim_NC + EEG_dip_sim_NC;

% baseline correction

EEG_exp_Go =  EEG_exp_Go - mean(EEG_exp_Go(1,tspan>=-150 & tspan<=-100));
EEG_exp_NC =  EEG_exp_NC - mean(EEG_exp_NC(1,tspan>=-150 & tspan<=-100));

EEG_sim_Go =  EEG_sim_Go - mean(EEG_sim_Go(1,tspan>=-150 & tspan<=-100));
EEG_sim_NC =  EEG_sim_NC - mean(EEG_sim_NC(1,tspan>=-150 & tspan<=-100));

%% Fig 8: C

font = 7;
width = 1;

figure('Units', 'inches','Position',[0 0 3.5 2.7]);
tiledlayout(3, 1,'TileSpacing','Compact','Padding','Compact');

nexttile;
colororder({'k','r'})
yyaxis right
plot(tspan, EEG_mon_exp_NC(1,:) - EEG_mon_exp_Go(1,:), '-', ...
    "DisplayName", "Eu CSD");
ylim([-1.2 1.2])
set(gca, 'YDir','reverse')
yyaxis left
plot(ts, smoothdata(ERN_NC_avg(1,:), 'gaussian',10) - ...
    smoothdata(ERN_Go_avg(1,:), 'gaussian',10), "DisplayName", "Eu EEG");
ylabel({'m'})
yline(0)
xline(0)
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylim([-10 10])
set(gca, 'YDir','reverse')
xlim([-150 500])
xticks(-100:100:500)
xticklabels({})
% legend([p1 p2], 'Location', 'best', 'box','off')
set(gca, 'box', 'off','linewidth',width,'fontsize',font,'fontweight','bold')

nexttile
colororder({'k','r'})
yyaxis right
plot(tspan, EEG_dip_exp_NC(1,:) - EEG_dip_exp_Go(1,:), '-', ...
    "DisplayName", "Eu CSD");
ylim([-10e-4 10e-4])
set(gca, 'YDir','reverse')
yyaxis left
plot(ts, smoothdata(ERN_NC_avg(1,:), 'gaussian',10) - ...
    smoothdata(ERN_Go_avg(1,:), 'gaussian',10), "DisplayName", "Eu EEG");
ylabel({'d'})
yline(0)
xline(0)
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylim([-10 10])
% legend([p1 p2], 'Location', 'best', 'box','off')
set(gca, 'YDir','reverse')
xlim([-150 500])
xticks(-100:100:500)
xticklabels({})
set(gca, 'box', 'off','linewidth',width,'fontsize',font,'fontweight','bold')

nexttile
colororder({'k','r'})
yyaxis right
p2 = plot(tspan, EEG_quad_exp_NC(1,:) - EEG_quad_exp_Go(1,:), '-', ...
    "DisplayName", "Eu CSD");
ylim([-14e-4 14e-4])
set(gca, 'YDir','reverse')
yyaxis left
p1 = plot(ts, smoothdata(ERN_NC_avg(1,:), 'gaussian',10) - ...
    smoothdata(ERN_Go_avg(1,:), 'gaussian',10), "DisplayName", "Eu EEG");
ylabel({'q'})
yline(0)
xline(0)
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
ylim([-10 10])
set(gca, 'YDir','reverse')
legend([p1 p2], 'Location', 'best', 'box','off')
xlim([-150 500])
xticks(-100:100:500)
xlabel('Time from saccade (ms)')
set(gca, 'box', 'off','linewidth',width,'fontsize',font,'fontweight','bold')

% title(t, 'EEG (\muV)','fontsize',font,'fontweight','bold')

%% normalization

norm_factor_EEG = max(abs([ERN_Go_avg(:,(ts>=-150 & ts <=500)) ...
    ERN_NC_avg(:,(ts>=-150 & ts <=500))]), [], 2, 'omitnan');

ERN_Go_avg = ERN_Go_avg./norm_factor_EEG;
ERN_NC_avg = ERN_NC_avg./norm_factor_EEG;

norm_factor_CSD = max(abs([EEG_exp_Go(:,(tspan>=-150 & tspan <=500)) ...
    EEG_exp_NC(:,(tspan>=-150 & tspan <=500))]), [], 2, 'omitnan');

EEG_exp_Go = EEG_exp_Go./norm_factor_CSD;
EEG_exp_NC = EEG_exp_NC./norm_factor_CSD;

EEG_mon_exp_Go_scaled = EEG_mon_exp_Go./norm_factor_CSD;
EEG_mon_exp_NC_scaled = EEG_mon_exp_NC./norm_factor_CSD;
EEG_dip_exp_Go_scaled = EEG_dip_exp_Go./norm_factor_CSD;
EEG_dip_exp_NC_scaled = EEG_dip_exp_NC./norm_factor_CSD;
EEG_quad_exp_Go_scaled = EEG_quad_exp_Go./norm_factor_CSD;
EEG_quad_exp_NC_scaled = EEG_quad_exp_NC./norm_factor_CSD;

norm_factor_simCSD = max(abs([EEG_sim_Go(:,(tspan>=-150 & tspan <=500)) ...
    EEG_sim_NC(:,(tspan>=-150 & tspan <=500))]), [], 2, 'omitnan');

EEG_sim_Go = EEG_sim_Go./norm_factor_simCSD;
EEG_sim_NC = EEG_sim_NC./norm_factor_simCSD;

%% Fig 8D: dipole + quadrupole + monopole

font = 7;
width = 1;

figure('Units', 'inches','Position',[0 0 3.5 2.7]);
t = tiledlayout(3, 1,'TileSpacing','Compact','Padding','Compact');

nexttile;
p1 = plot(ts, smoothdata(ERN_Go_avg(1,:), 'gaussian',10), '-k', ...
    "DisplayName", "Eu EEG", 'LineWidth', 1.25);
hold on;
p2 = plot(tspan, EEG_exp_Go(1,:), ...
    '-r','LineWidth',1.25, "DisplayName", "Eu CSD");
% ylabel({'Normalized', 'Amplitude FpFz'})
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
xlim([-150 500])
ylim([-0.546 1])
title('Correct')
legend([p1 p2], 'Location', 'best', 'Box','off')
xticks(-100:100:500)
set(gca, 'YDir','reverse')
set(gca, 'box', 'off','linewidth',width,'fontsize',font,'fontweight','bold')

nexttile
plot(ts, smoothdata(ERN_NC_avg(1,:), 'gaussian',10), ':k', ...
    "DisplayName", "Eu EEG", 'LineWidth', 3); 
hold on;
plot(tspan, EEG_exp_NC(1,:), ...
    ':r','LineWidth',3, "DisplayName", "Eu CSD")
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
title('Error')
xlim([-150 500])
xticks(-100:100:500)
% legend('Location', 'best', 'Box','off')
set(gca, 'YDir','reverse')
set(gca, 'box', 'off','linewidth',width,'fontsize',font,'fontweight','bold')

nexttile
plot(ts, smoothdata(ERN_NC_avg(1,:), 'gaussian',10) - ...
    smoothdata(ERN_Go_avg(1,:), 'gaussian',10), '-k', ...
    "DisplayName", "Eu EEG", 'linewidth', 1.5)
hold on;
plot(tspan, EEG_exp_NC(1,:) - ...
    (EEG_exp_Go(1,:)), ...
    '-r', "DisplayName", 'EEG CSD', 'linewidth', 1.5)
xline(ERN, '--k', 'LineWidth',2)
xline(Pe, '-.b', 'LineWidth',2)
xlim([-150 500])
title('Error - Correct')
xticks(-100:100:500)
xlabel('Time from saccade (ms)')
% legend('Location', 'best', 'Box','off')
set(gca, 'YDir','reverse')
set(gca, 'box', 'off','linewidth',width,'fontsize',font,'fontweight','bold')

%% dipole + quadrupole + monopole & sim

font = 12;
figure('Units', 'inches','Position',[0.05 0.05 13 2.5]); 
subplot(1,3,1)
plot(ts, smoothdata(ERN_Go_avg(1,:), 'gaussian',10), '-k', ...
    "DisplayName", "Eu EEG", 'LineWidth', 1.25)
hold on;
plot(tspan, EEG_exp_Go(1,:), ...
    '-','LineWidth',1.25, "DisplayName", "Eu CSD")
hold on;
plot(tspan, (EEG_sim_Go(1,:)), ...
    '-','LineWidth',1, "DisplayName", "Sim CSD")
ylabel('Normalized Amplitude FpFz')
% xlim([-150 500])
xlim([-150 500])
title('Correct')
legend('Location', 'best', 'Box','off')
xticklabels({})
% xticks([-100 0 100 200])
xticks(-100:100:500)
set(gca, 'YDir','reverse')
set(gca, 'box', 'off','linewidth',1.5,'fontsize',font,'fontweight','bold')

subplot(1,3,2)
plot(ts, smoothdata(ERN_NC_avg(1,:), 'gaussian',10), ':k', ...
    "DisplayName", "Eu EEG", 'LineWidth', 2); 
hold on;
plot(tspan, EEG_exp_NC(1,:), ...
    ':','LineWidth',3, "DisplayName", "Eu CSD")
plot(tspan, (EEG_sim_NC(1,:)), ...
    '-','LineWidth',1, "DisplayName", "Sim CSD")
% ylabel('\muV')
xlabel('Time from saccade (ms)')
title('Error')
% xlim([-150 500])
xlim([-150 500])
% xticks([-100 0 100 200])
% xticklabels({})
xticks(-100:100:500)
legend('Location', 'best', 'Box','off')
set(gca, 'YDir','reverse')
set(gca, 'box', 'off','linewidth',1.5,'fontsize',font,'fontweight','bold')

subplot(1,3,3)
plot(ts, smoothdata(ERN_NC_avg(1,:), 'gaussian',10) - ...
    smoothdata(ERN_Go_avg(1,:), 'gaussian',10), '-k', ...
    "DisplayName", "Eu EEG", 'LineWidth', 1)
hold on;
plot(tspan, EEG_exp_NC(1,:) - ...
    (EEG_exp_Go(1,:)), ...
    '-','LineWidth',1, "DisplayName", 'EEG CSD')
plot(tspan, (EEG_sim_NC(1,:)) - ...
    (EEG_sim_Go(1,:)), ...
    '-','LineWidth',1, "DisplayName", "Sim CSD")
% xlim([-150 500])
xlim([-150 500])
% ylabel('\muV')
title('Error - Correct')
xticklabels({})
% xticks([-100 0 100 200])
xticks(-100:100:500)
legend('Location', 'best', 'Box','off')
set(gca, 'YDir','reverse')
set(gca, 'box', 'off','linewidth',1.5,'fontsize',font,'fontweight','bold')
